"""reset

Revision ID: e8489d074a41
Revises: 1430f2d8a194
Create Date: 2025-05-01 21:46:07.517484

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e8489d074a41'
down_revision = '1430f2d8a194'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('courseID', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('courseID')
    )
    op.create_table('users',
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=120), nullable=True),
    sa.Column('subscription_active', sa.Boolean(), nullable=True),
    sa.Column('subscription_plan', sa.String(length=50), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('userID'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('userID'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tees',
    sa.Column('teeID', sa.Integer(), nullable=False),
    sa.Column('courseID', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('total_distance', sa.Integer(), nullable=True),
    sa.Column('course_par', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['courseID'], ['courses.courseID'], ),
    sa.PrimaryKeyConstraint('teeID')
    )
    op.create_table('holes',
    sa.Column('holeID', sa.Integer(), nullable=False),
    sa.Column('courseID', sa.Integer(), nullable=False),
    sa.Column('teeID', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('par', sa.Integer(), nullable=False),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['courseID'], ['courses.courseID'], ),
    sa.ForeignKeyConstraint(['teeID'], ['tees.teeID'], ),
    sa.PrimaryKeyConstraint('holeID')
    )
    op.create_table('rounds',
    sa.Column('roundID', sa.Integer(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('tee_id', sa.Integer(), nullable=False),
    sa.Column('date_played', sa.Date(), nullable=False),
    sa.Column('round_type', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('score_to_par', sa.Integer(), nullable=True),
    sa.Column('sg_off_tee', sa.Float(), nullable=True),
    sa.Column('sg_approach', sa.Float(), nullable=True),
    sa.Column('sg_around_green', sa.Float(), nullable=True),
    sa.Column('sg_putting', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.courseID'], ),
    sa.ForeignKeyConstraint(['tee_id'], ['tees.teeID'], ),
    sa.ForeignKeyConstraint(['userID'], ['users.userID'], ),
    sa.PrimaryKeyConstraint('roundID')
    )
    op.create_table('hole_stats',
    sa.Column('holeStatsID', sa.Integer(), nullable=False),
    sa.Column('roundID', sa.Integer(), nullable=False),
    sa.Column('holeID', sa.Integer(), nullable=False),
    sa.Column('gir', sa.Boolean(), nullable=False),
    sa.Column('fairway_hit', sa.Boolean(), nullable=True),
    sa.Column('up_and_down', sa.Boolean(), nullable=True),
    sa.Column('hole_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['holeID'], ['holes.holeID'], ),
    sa.ForeignKeyConstraint(['roundID'], ['rounds.roundID'], ),
    sa.PrimaryKeyConstraint('holeStatsID')
    )
    op.create_table('shots',
    sa.Column('shotID', sa.Integer(), nullable=False),
    sa.Column('roundID', sa.Integer(), nullable=False),
    sa.Column('holeID', sa.Integer(), nullable=False),
    sa.Column('distance_before', sa.Float(), nullable=False),
    sa.Column('lie_before', sa.String(length=50), nullable=False),
    sa.Column('distance_after', sa.Float(), nullable=False),
    sa.Column('lie_after', sa.String(length=50), nullable=False),
    sa.Column('shot_type', sa.String(length=50), nullable=False),
    sa.Column('strokes_gained', sa.Float(), nullable=False),
    sa.Column('miss_direction', sa.String(), nullable=True),
    sa.Column('club', sa.String(length=50), nullable=True),
    sa.Column('short_sided', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['holeID'], ['holes.holeID'], ),
    sa.ForeignKeyConstraint(['roundID'], ['rounds.roundID'], ),
    sa.PrimaryKeyConstraint('shotID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shots')
    op.drop_table('hole_stats')
    op.drop_table('rounds')
    op.drop_table('holes')
    op.drop_table('tees')
    op.drop_table('users')
    op.drop_table('courses')
    # ### end Alembic commands ###
